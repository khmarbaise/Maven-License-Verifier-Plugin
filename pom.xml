<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.soebes.smpp</groupId>
    <artifactId>smpp</artifactId>
    <version>0.4</version>
  </parent>

  <groupId>com.soebes.maven.plugins</groupId>
  <artifactId>license-verifier-maven-plugin</artifactId>
  <packaging>maven-plugin</packaging>
  <version>0.5-SNAPSHOT</version>
  <name>License Verifier Maven Plugin</name>
  <url>https://github.com/khmarbaise/Maven-License-Verifier-Plugin</url>

  <inceptionYear>2009</inceptionYear>
  <description>The License Verifier Maven Plugin is intented to check
    the different artifacts of a project.</description>

  <issueManagement>
    <system>default</system>
    <url>https://github.com/khmarbaise/Maven-License-Verifier-Plugin/issues</url>
  </issueManagement>

  <ciManagement>
    <system>Jenkins</system>
    <url>http://188.40.37.211:8080/</url>
  </ciManagement>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <maven-license-plugin.version>1.9.0</maven-license-plugin.version>
    <mdoVersion>1.0.0</mdoVersion>

    <mavenVersion>2.2.1</mavenVersion>

    <!-- all kind of resources etc. will be UTF-8 encoded -->
  	
  </properties>

  <prerequisites>
    <maven>${mavenVersion}</maven>
  </prerequisites>

  <developers>
    <developer>
      <id>kama</id>
      <name>Karl Heinz Marbaise</name>
      <email>khmarbaise@soebes.com</email>
      <url>http://blog.soebes.de</url>
      <organization>SoftwareEntwicklung Beratung Schulung</organization>
      <organizationUrl>http://www.soebes.de</organizationUrl>
      <roles>
        <role>lead</role>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:git://github.com/khmarbaise/Maven-License-Verifier-Plugin.git</connection>
    <developerConnection>scm:git:git@github.com:khmarbaise/Maven-License-Verifier-Plugin.git</developerConnection>
    <url>https://github.com/khmarbaise/Maven-License-Verifier-Plugin</url>
  </scm>

  <distributionManagement>
    <repository>
      <id>ossrh-staging</id>
      <url>http://oss.sonatype.org/service/local/staging/deploy/maven2</url>
    </repository>
    <snapshotRepository>
      <id>ossrh-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
    <site>
      <id>site.supose.org</id>
      <url>scp://minden205.server4you.de:/usr/local/vhosts/site.supose.org/maven-license-verifier-plugin</url>
    </site>
  </distributionManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <configuration>
            <autoVersionSubmodules>true</autoVersionSubmodules>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.modello</groupId>
          <artifactId>modello-maven-plugin</artifactId>
          <version>1.4.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
          <debug>false</debug>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <executions>
          <execution>
            <id>generated-helpmojo</id>
            <goals>
              <goal>helpmojo</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.modello</groupId>
        <artifactId>modello-maven-plugin</artifactId>
        <configuration>
          <models>
            <model>src/main/mdo/licenses.mdo</model>
          </models>
        </configuration>
        <executions>
          <execution>
            <id>mdo</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>xpp3-reader</goal>
              <goal>xpp3-writer</goal>
              <goal>java</goal>
            </goals>
            <configuration>
              <useJava5>true</useJava5>
              <version>${mdoVersion}</version>
            </configuration>
          </execution>
          <execution>
            <id>xsd</id>
            <phase>pre-site</phase>
            <goals>
              <goal>xsd</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/generated-site/resources/xsd</outputDirectory>
              <useJava5>true</useJava5>
              <version>${mdoVersion}</version>
            </configuration>
          </execution>
          <execution>
            <id>xdoc</id>
            <phase>pre-site</phase>
            <goals>
              <goal>xdoc</goal>
            </goals>
            <configuration>
              <xdocFileName>licenses-modello.xml</xdocFileName>
              <useJava5>true</useJava5>
              <version>${mdoVersion}</version>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <plugin>
        <groupId>com.mycila.maven-license-plugin</groupId>
        <artifactId>maven-license-plugin</artifactId>
        <configuration>
          <header>src/etc/header.txt</header>
          <quiet>false</quiet>
          <aggregate>true</aggregate>
          <failIfMissing>false</failIfMissing>
          <includes>
            <include>src/**</include>
          </includes>
          <excludes>
            <exclude>src/main/resources/**</exclude>
            <exclude>src/test/resources/**</exclude>
            <exclude>target/**</exclude>
            <!-- Seemed not to be working -->
            <exclude>src/site/apt/*.apt.vm</exclude>
            <exclude>src/it/**/*.bsh</exclude>
          </excludes>
          <mapping>
            <apt>DOUBLETILDE_STYLE</apt>
            <mdo>XML_STYLE</mdo>
            <bsh>JAVA_STYLE</bsh>
            <g>DOUBLESLASH_STYLE</g>
            <apt.vm>DOUBLETILDE_STYLE</apt.vm>
          </mapping>
          <properties>
            <year>2009, 2010, 2011, 2012, 2013</year>
            <email>lvmp@soebes.de</email>
          </properties>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Currently the generation of the xml file only works via command
        line mvn cobertura:cobertura http://jira.codehaus.org/browse/MCOBERTURA-145 -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <configuration>
          <formats>
            <format>xml</format>
          </formats>
        </configuration>
      </plugin>

    </plugins>

  </build>

  <dependencies>
    <dependency>
      <groupId>org.apache.maven.shared</groupId>
      <artifactId>maven-common-artifact-filters</artifactId>
      <version>1.1</version>
    </dependency>

    <!-- Maven -->
    <!-- Maven Reporting -->
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-site-renderer</artifactId>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>doxia</groupId>
      <artifactId>doxia-sink-api</artifactId>
      <version>1.0-alpha-5</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <version>3.5.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <version>2.2.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <version>3.5.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <version>3.5.0</version>
    </dependency>

    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <version>3.1.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.doxia</groupId>
      <artifactId>doxia-module-xhtml</artifactId>
      <version>1.0</version>
    </dependency>

    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-invoker-plugin</artifactId>
      <version>3.0.1</version>
    </dependency>

    <dependency>
      <groupId>org.easytesting</groupId>
      <artifactId>fest-assert</artifactId>
      <version>1.4</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- May be we should change to JUnit -->
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changes-plugin</artifactId>
        <configuration>
          <issueLinkTemplatePerSystem>
            <default>https://github.com/khmarbaise/Maven-License-Verifier-Plugin/issues/%ISSUE%</default>
          </issueLinkTemplatePerSystem>
        </configuration>
        <reportSets>
          <reportSet>
            <reports>
              <report>changes-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <!-- All the following tags are Mojo specific -->
        <configuration>
          <tags>
            <tag>
              <name>goal</name>
              <placement>X</placement>
            </tag>
            <tag>
              <name>phase</name>
              <placement>X</placement>
            </tag>
            <tag>
              <name>requiresDependencyResolution</name>
              <placement>X</placement>
            </tag>
            <tag>
              <name>parameter</name>
              <placement>X</placement>
            </tag>
            <tag>
              <name>required</name>
              <placement>X</placement>
            </tag>
            <tag>
              <name>readonly</name>
              <placement>X</placement>
            </tag>
            <tag>
              <name>requiresProject</name>
              <placement>X</placement>
            </tag>
            <tag>
              <name>component</name>
              <placement>X</placement>
            </tag>
          </tags>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-plugin-plugin</artifactId>
        <version>2.5.1</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${cobertura-maven-plugin.verison}</version>
        <configuration>
          <formats>
            <format>html</format>
          </formats>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>cim</report>
              <report>dependencies</report>
              <report>dependency-convergence</report>
              <report>dependency-management</report>
              <report>distribution-management</report>
              <report>index</report>
              <report>issue-tracking</report>
              <report>license</report>
              <report>mailing-list</report>
              <report>modules</report>
              <report>plugin-management</report>
              <report>plugins</report>
              <report>project-team</report>
              <report>scm</report>
              <report>summary</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
    </plugins>
  </reporting>
  <!-- Profile definition for running integration-test running the integration
    tests with the following command line: mvn -Prun-its integration-test -->
  <profiles>
    <profile>
      <id>run-its</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-invoker-plugin</artifactId>
            <version>1.5</version>
            <configuration>
              <debug>false</debug>
              <projectsDirectory>src/it</projectsDirectory>
              <cloneProjectsTo>${project.build.directory}/it
              </cloneProjectsTo>
              <setupIncludes>
                <setupInclude>mlv-setup/pom.xml</setupInclude>
                <setupInclude>mlv-setup-different-location/pom.xml</setupInclude>
              </setupIncludes>

              <pomIncludes>
                <pomInclude>*/pom.xml</pomInclude>
              </pomIncludes>
              <!-- Currently exclude, cause dependencies can be solved during
                a build with private repository. -->
              <pomExcludes>
                <pomExclude>suposeTest/pom.xml</pomExclude>
              </pomExcludes>
              <preBuildHookScript>setup</preBuildHookScript>
              <postBuildHookScript>verify</postBuildHookScript>
              <localRepositoryPath>${project.build.directory}/local-repo
              </localRepositoryPath>
              <settingsFile>src/it/settings.xml</settingsFile>
              <goals>
                <goal>clean</goal>
                <goal>test</goal>
              </goals>
            </configuration>
            <executions>
              <execution>
                <id>integration-test</id>
                <goals>
                  <goal>install</goal>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>


</project>

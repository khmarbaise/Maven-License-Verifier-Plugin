 ------
 Introduction
 ------
 Karl Heinz Marbaise
 ------
 02 January 2010
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Maven License Verifier Plugin


  The basic idea of the Maven License Verifier Plugin (MLV for short) is to
  check which licenses are used in your project and give some hints about
  artifacts which don't define a license at all or artifacts which
  use artifacts which are not acceptable in your project or company.

  This will sometimes called License Compliance Management, but this
  plugin will support your work but of course doesn't take the job itself.

* Goals Overview

  There are currently two goals (check, report) which can be used to check
  your project and create a report about the used licenses.

* Usage

  If you like to use the MLV plugin you have to use the plugin
  in your pom either in the area of the build to do a check
  during the build. On the other hand you can use the
  MLV plugin in the area of the reporting to produce a report
  about the used licenses.

  In both cases you have to define the location of a {{{licenses.html}licenses.xml}}
  file which contains the definition of the different {{{categories.html}categories}} of
  licenses.

+-----
<project>
  ...
  <build>
    <plugins>
      <plugin>
        <groupId>${project.groupId}</groupId>
        <artifactId>${project.artifactId}</artifactId>
        <version>${project.version}</version>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals><goal>verify</goal></goals>
            <configuration>
              <verbose>true</verbose>
              <excludes>
                <exclude>org.antlr:antlr-runtime:jar:3.3</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  ...
</project>
+-----


* Examples

 Here you can see an example of an execution of the MLV plugin on a particular project:

+-----
[INFO] [licenses-verifier:verify {execution: default}]
[INFO] Loading /home/kama/ws-git/sapm/src/main/licenses/licenses.xml licenses file.
[WARNING] The artifact: org.antlr:antlr-runtime:jar:3.3 has been execluded by the configuration.
[WARNING] ]UNKNOWN[ (compile) The artifact antlr:antlr:jar:2.7.7 has a license which is categorized as unknown
[WARNING] ]UNKNOWN[ (compile) The artifact org.antlr:stringtemplate:jar:3.2.1 has a license which is categorized as unknown
[WARNING] ]UNKNOWN[ (test) The artifact aopalliance:aopalliance:jar:1.0 has a license which is categorized as unknown
[INFO]    ]VALID[   (test) The artifact com.beust:jcommander:jar:1.12 has a license which is categorized as valid
[INFO]    ]VALID[   (test) The artifact com.google.inject:guice:jar:2.0 has a license which is categorized as valid
[INFO]    ]VALID[   (test) The artifact junit:junit:jar:3.8.1 has a license which is categorized as valid
[WARNING] ]UNKNOWN[ (test) The artifact org.beanshell:bsh:jar:2.0b4 has a license which is categorized as unknown
[INFO]    ]VALID[   (test) The artifact org.testng:testng:jar:5.14.6 has a license which is categorized as valid
[INFO] [jar:jar {execution: default-jar}]
[INFO] Building jar: /home/kama/ws-git/sapm/target/sapm-0.4-SNAPSHOT.jar
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESSFUL
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 9 seconds
[INFO] Finished at: Sat Jan 29 23:33:07 CET 2011
[INFO] Final Memory: 32M/306M
[INFO] ------------------------------------------------------------------------
+-----

  []

